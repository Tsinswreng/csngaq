<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<OutputType>Exe</OutputType>
		<!--If you are willing to use Windows/MacOS native APIs you will need to create 3 projects.
    One for Windows with net9.0-windows TFM, one for MacOS with net9.0-macos and one with net9.0 TFM for Linux.-->
		<TargetFramework>net9.0</TargetFramework>
		<Nullable>enable</Nullable>
		<BuiltInComInteropSupport>true</BuiltInComInteropSupport>

<!-- test -->
		<PublishAot>true</PublishAot>
		<PublishSingleFile>true</PublishSingleFile>
		<RuntimeIdentifier>win-x64</RuntimeIdentifier>
		<!-- dotnet publish -c Release -r win-x64 -->


	</PropertyGroup>

	<PropertyGroup>
		<ApplicationManifest>app.manifest</ApplicationManifest>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Avalonia.Desktop" />
		<!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
		<PackageReference Include="Avalonia.Diagnostics">
			<IncludeAssets Condition="'$(Configuration)' != 'Debug'">None</IncludeAssets>
			<PrivateAssets Condition="'$(Configuration)' != 'Debug'">All</PrivateAssets>
		</PackageReference>
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="../ngaq.Core/ngaq.Core.csproj" />
		<ProjectReference Include="../ngaq.UI/ngaq.UI.csproj" />
		<ProjectReference Include="../ngaq.Server/ngaq.Server.csproj" />
		<Compile Include="../CsShared/GlobalUsing.cs" />
		<Compile Include="../CsShared/GlobalSuppression.cs" />
	</ItemGroup>

	<PropertyGroup>
		<PublishTrimmed>false</PublishTrimmed>
		<JsonSerializerIsReflectionEnabledByeDfault>true</JsonSerializerIsReflectionEnabledByeDfault>
	</PropertyGroup>


</Project>
